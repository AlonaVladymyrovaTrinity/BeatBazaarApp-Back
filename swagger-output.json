{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "Description",
    "version": "1.0.0"
  },
  "host": "localhost:8000",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/api/v1/auth/register": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "username": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": ["Users"],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/showMe": {
      "get": {
        "tags": ["Users"],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/showMe/withAlbums": {
      "get": {
        "tags": ["Users"],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/updateCurrentUser": {
      "patch": {
        "tags": ["Users"],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/updateUserPasssword": {
      "patch": {
        "tags": ["Users"],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "oldPassword": {
                  "example": "any"
                },
                "newPassword": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Fetch a user by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Mongo ObjectID of the user to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully fetched.",
            "schema": {
              "$ref": "#/definitions/PasswordlessUser"
            }
          },
          "403": {
            "description": "Requester forbidden to fetch this user."
          },
          "404": {
            "description": "No user with id found."
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/albums/": {
      "get": {
        "summary": "Fetch all albums in a database",
        "description": "",
        "responses": {
          "200": {
            "description": "Albums successfully fetched.",
            "schema": {
              "type": "object",
              "properties": {
                "albums": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Album"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new album and save it to the database",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "description": "Mongo ObjectID of the album to fetch",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "patch": {
        "summary": "Update prices of albums passed in req.body",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "map((update": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Albums prices were successfully updated.",
            "chema": {
              "albums": [
                {
                  "$ref": "#/definitions/Album"
                }
              ]
            }
          }
        }
      }
    },
    "/api/v1/albums/filter": {
      "get": {
        "summary": "Fetch first 10 albums in a database with price more than 0",
        "description": "",
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "schema",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Filtered by price more than 0 albums were successfully fetched.",
            "schema": {
              "type": "object",
              "properties": {
                "albums": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Album"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/albums/{id}": {
      "get": {
        "summary": "Fetch an album by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Mongo ObjectID of the album to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Album successfully fetched.",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          },
          "404": {
            "description": "No album with this id wasfound."
          }
        }
      },
      "patch": {
        "summary": "Fetch an album by id and update it",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Mongo ObjectID of the album to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Album successfully fetched and updated.",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          },
          "404": {
            "description": "No album with this id wasfound."
          }
        }
      }
    },
    "/api/v1/albums/{id}/listOfUsersWhoPurchasedThisAlbum": {
      "get": {
        "summary": "Show all users that purchased this particular album",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Album with users who purchased it was fetched successfully ",
            "chema": {
              "albums": [
                {
                  "$ref": "#/definitions/Album"
                }
              ]
            }
          },
          "404": {
            "description": "No album with this id wasfound."
          }
        }
      }
    },
    "/api/v1/orders/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "orderItems": {
                  "example": "any"
                },
                "subtotal": {
                  "example": "any"
                },
                "tax": {
                  "example": "any"
                },
                "total": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/reviews/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/reviews/album/{albumId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "albumId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "albumId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "album": {
                  "example": "any"
                },
                "user": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/reviews/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rating": {
                  "example": "any"
                },
                "title": {
                  "example": "any"
                },
                "comment": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/wishlist/wishlist/{wishlist_id}/add_album/{album_id}": {
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "wishlist_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "album_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/wishlist/wishlist/{wishlist_id}/remove_album/{album_id}": {
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "wishlist_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "album_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/admin/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/admin/api/albums": {
      "patch": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "PasswordlessUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "username": {
          "type": "string",
          "example": "johndoe"
        },
        "email": {
          "type": "string",
          "example": "john@example.com"
        },
        "role": {
          "type": "string",
          "enum": ["user", "admin"]
        },
        "profileImage": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "example": "https://example.com/profile-image.jpg"
            }
          }
        },
        "creditCardInfo": {
          "type": "object",
          "properties": {
            "hashedNumber": {
              "type": "string",
              "example": "1234567890"
            },
            "expiry": {
              "type": "string",
              "example": "12/24"
            },
            "preferredPaymentOption": {
              "type": "string",
              "enum": ["credit card", "paypal", "google pay"]
            }
          }
        }
      }
    }
  }
}
