{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "Description",
    "version": "1.0.0"
  },
  "host": "localhost:8000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "username": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Fetch all registered users in a database whose role is user (exclude admins)",
        "description": "",
        "responses": {
          "200": {
            "description": "Users successfully fetched.",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PasswordlessUser"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/users/showMe": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns information about the requesting user based on cookie session",
        "description": "",
        "responses": {
          "200": {
            "description": "User successfully fetched.",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PasswordlessUser"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "No user with id found."
          }
        }
      }
    },
    "/api/v1/users/showMe/withAlbums": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Fetch a user by id and all albums they purchased.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "description": "Mongo ObjectID of the user to fetch",
            "schema": {
              "$ref": "#/definitions/UserWithAlbums"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "User and their albums purchased fetched successfully."
          },
          "404": {
            "description": "No user with id found."
          }
        }
      }
    },
    "/api/v1/users/updateCurrentUser": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Fetch the requesting user, update their data and return the updated user.",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully fetched and updated.",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PasswordlessUser"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Error. Need to provide both name and email values."
          }
        }
      }
    },
    "/api/v1/users/updateUserPasssword": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Fetch the current requesting user by id, update their password and save it to the database.",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "oldPassword": {
                  "example": "any"
                },
                "newPassword": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Fetch a user by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Mongo ObjectID of the user to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully fetched.",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/definitions/PasswordlessUser"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Requester forbidden to fetch this user."
          },
          "404": {
            "description": "No user with id found."
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Fetch a user by id and delete user.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully fetched and deleted."
          },
          "404": {
            "description": "No user with id found."
          }
        }
      }
    },
    "/api/v1/albums/": {
      "get": {
        "tags": [
          "Albums"
        ],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Albums"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "patch": {
        "tags": [
          "Albums"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "map((update": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/albums/filter": {
      "get": {
        "tags": [
          "Albums"
        ],
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "string"
          },
          {
            "name": "albumName",
            "in": "query",
            "type": "string"
          },
          {
            "name": "artistName",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/albums/{id}": {
      "get": {
        "tags": [
          "Albums"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "patch": {
        "tags": [
          "Albums"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/albums/{id}/listOfUsersWhoPurchasedThisAlbum": {
      "get": {
        "tags": [
          "Albums"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/orders/": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "orderItems": {
                  "example": "any"
                },
                "subtotal": {
                  "example": "any"
                },
                "tax": {
                  "example": "any"
                },
                "total": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/reviews/": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/reviews/album/{albumId}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "description": "",
        "parameters": [
          {
            "name": "albumId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Reviews"
        ],
        "description": "",
        "parameters": [
          {
            "name": "albumId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "album": {
                  "example": "any"
                },
                "user": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/reviews/{id}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "patch": {
        "tags": [
          "Reviews"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rating": {
                  "example": "any"
                },
                "title": {
                  "example": "any"
                },
                "comment": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/wishlist/wishlist/{wishlist_id}/add_album/{album_id}": {
      "patch": {
        "tags": [
          "Wishlist"
        ],
        "description": "",
        "parameters": [
          {
            "name": "wishlist_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "album_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/wishlist/wishlist/{wishlist_id}/remove_album/{album_id}": {
      "patch": {
        "tags": [
          "Wishlist"
        ],
        "description": "",
        "parameters": [
          {
            "name": "wishlist_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "album_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/admin/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "PasswordlessUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "username": {
          "type": "string",
          "example": "johndoe"
        },
        "email": {
          "type": "string",
          "example": "john@example.com"
        },
        "role": {
          "type": "string",
          "enum": [
            "user",
            "admin"
          ]
        },
        "profileImage": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "example": "https://example.com/profile-image.jpg"
            }
          }
        },
        "creditCardInfo": {
          "type": "object",
          "properties": {
            "hashedNumber": {
              "type": "string",
              "example": "1234567890"
            },
            "expiry": {
              "type": "string",
              "example": "12/24"
            },
            "preferredPaymentOption": {
              "type": "string",
              "enum": [
                "credit card",
                "paypal",
                "google pay"
              ]
            }
          }
        }
      },
      "required": [
        "name",
        "username",
        "email",
        "role"
      ]
    },
    "UserWithAlbums": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "username": {
          "type": "string",
          "example": "johndoe"
        },
        "email": {
          "type": "string",
          "example": "john@example.com"
        },
        "role": {
          "type": "string",
          "enum": [
            "user",
            "admin"
          ]
        },
        "profileImage": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "example": "https://example.com/profile-image.jpg"
            },
            "creditCardInfo": {
              "type": "object",
              "properties": {
                "hashedNumber": {
                  "type": "string",
                  "example": "1234567890"
                },
                "expiry": {
                  "type": "string",
                  "example": "12/24"
                },
                "preferredPaymentOption": {
                  "type": "string",
                  "enum": [
                    "credit card",
                    "paypal",
                    "google pay"
                  ]
                }
              }
            }
          }
        },
        "artistName": {
          "type": "string",
          "example": "Britney Spears"
        },
        "albumName": {
          "type": "string",
          "example": "...Baby one more time"
        },
        "price": {
          "type": "number",
          "example": 20
        },
        "image": {
          "type": "string",
          "example": "/uploads/example.jpg"
        },
        "releaseDate": {
          "type": "string",
          "example": "2023-07-28 T00:00:00.000+00:00"
        },
        "category": {
          "type": "string",
          "example": "pop"
        },
        "spotifyUrl": {
          "type": "string",
          "example": "https://api.spotify.com/v1/albums/6r1lh7fHMB499vGKtIyJLy"
        },
        "averageRating": {
          "type": "number",
          "example": 4
        },
        "numOfReviews": {
          "type": "number",
          "example": 2
        }
      },
      "required": [
        "name",
        "username",
        "email",
        "role",
        "artistName",
        "albumName"
      ]
    }
  }
}